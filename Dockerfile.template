# base-image for node on any machine using a template variable,
# see more about dockerfile templates here: https://www.balena.io/docs/learn/develop/dockerfile/#dockerfile-templates
# and about balena base images here: https://www.balena.io/docs/reference/base-images/base-images/
FROM balenalib/%%BALENA_MACHINE_NAME%%-node:10-stretch-run

RUN apt-get -q update && \
apt-get upgrade && \
apt-get install -yq --no-install-recommends build-essential libraspberrypi-bin libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev python make g++ nodejs git openssh-server gcc && \
apt-get clean

# Defines our working directory in containergit a
WORKDIR /usr/src/app

RUN git clone https://github.com/hzeller/rpi-rgb-led-matrix.git
RUN cd rpi-rgb-led-matrix && make -C examples-api-use && cd ..

# Copies the package.json first for better cache on later pushes
COPY package.json package.json

# This install npm dependencies on the balena build server,
# making sure to clean up the artifacts it creates in order to reduce the image size.
RUN JOBS=MAX npm install --production --unsafe-perm && npm cache verify && rm -rf /tmp/*

# This will copy all files in our root to the working  directory in the container
COPY . ./

# Enable udevd so that plugged dynamic hardware devices show up in our container.
ENV UDEV=1

# server.js will run when container starts up on the device
CMD ["npm", "start"]

#lower level demos
# CMD ["rpi-rgb-led-matrix/examples-api-use/demo", "-D", "9", "-m", "50", "--led-gpio-mapping=adafruit-hat", "--led-rows=16", "--led-cols=32"]